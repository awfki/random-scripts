#!/usr/bin/env python
#
# 2014-07-11/DN: A pexpect script to backup the config of a Cisco ASA because it wasn't being backed up at the time.
#
import pexpect 	#module for logging into the ASA
import sys 	#module for writing files to log/linux shell
import argparse	#parsing command line arguments

# 2014-07-10/DN - debugging to clear the screen with each run
#import os		#operating system options
#os.system('cls' if os.name == 'nt' else 'clear')

parser = argparse.ArgumentParser(description='Get "show version" from a Cisco ASA.')
parser.add_argument('-u', '--user',     default='cisco', help='user name to login with (default=cisco)')
parser.add_argument('-p', '--password', default='cisco', help='password to login with (default=cisco)')
parser.add_argument('-e', '--enable',   default='cisco', help='password for enable (default=cisco)')
parser.add_argument('-d', '--device',   default='192.168.1.1', help='device to login to (default=192.168.1.1)')
parser.add_argument('-c', '--command',  default='show version', help='command to run in the device (default=show version)')
args = parser.parse_args()

# Add a test here to exit if all of the args are default.

#child becomes the object to send/receive commands from the ASA
child = pexpect.spawn('ssh '+args.user+'@'+args.device)

#for debugging we send the input and output to the linux shell
child.logfile_read = sys.stdout
child.logfile_send = sys.stdout

#familiar process of logging into a cisco device
#expect waits for response from the console
#some special characters here like:
#   . means any character
#   + means the previous character 1 or more times
#   * means the previous character 0 or more times

#the print commands are here in case you run into trouble and will give you an idea where the script stopped
print 'expecting password'
child.expect('.*password: ')

print 'sending password'
child.sendline(args.password)

print 'expecting login'
#expecting the hostname> prompt
child.expect('.*> ')
child.sendline('enable')

#expecting the enable password prompt
child.expect('Password.*')
print 'sending password'
child.sendline(args.enable)

print 'expecting exec'
#expecting a login prompt of hostname#
child.expect('.*#.*')

#setting the terminal length to infinity so we don't need to press space or enter to continue the prompt
child.sendline('terminal pager 0')

#setting a new file for output so we can write output from the screen to a file for later
fout = file(args.device+'.log','w')
child.expect('.*#.*')

#sending the command output to a file
child.logfile_read = fout
child.sendline(args.command)

#expecting the hostname# prompt
child.expect('.*#.*')
fout.close()  #closing the file for best practice
child.sendline('exit')	# logout of the ASA
exit()
