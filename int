#!/usr/bin/env python
# 2015-09-30/DN: script to list IPs and MACs in nice table rather than the mess
# 	that ifconfig spits out.
# 2015-10-01/DN: Added an option to filter interfaces
#=======================
import netifaces
import sys

# Check for an argument set argv
try:
	argv = sys.argv[1]
except:
	argv="None"

# Add the header rows to each list
iname = ["Int"]
ip = ["IP Address"]
mask = ["Netmask"]
mac = ["MAC Address"]
iname.append("-------")
ip.append("---------------")
mask.append("---------------")
mac.append("-----------------")

# Grab the list of interfaces and sort it
intlist = netifaces.interfaces()
intlist.sort()

# Run through the list of interfaces and ...
#	if they're they match argv or argv is None then...
# 	add them and L2/L3 addresses and gateways to the appropriate lists
ctr = 0
for int in intlist:
	if (argv is not "None") and ( argv not in int):
		ctr += 1
		continue
	else:
		iname.append(int)
		addr = netifaces.ifaddresses(int)
		try:
			ip.append(addr[netifaces.AF_INET][0]['addr'])
			mask.append(addr[netifaces.AF_INET][0]['netmask'])
		except:
			ip.append("N/A")
			mask.append("N/A")
		else:
			pass

		try:
			addr[netifaces.AF_LINK]
		except:
			mac.append("N/A")
		else:
			mac.append(addr[netifaces.AF_LINK][0]['addr'])
		ctr += 1

# print the lists in a pretty table
print
ctr = 0
for x in iname:
	print "{a:>7}  {i:>15}  {n:>15}  {m:>17}".format(a=iname[ctr], i=ip[ctr], n=mask[ctr], m=mac[ctr])
	ctr += 1
print

# Was going to make it list the gateway but it's not simple
# especially if there's an L2 gateway (VPN tunnel) involved
# gwlist = netifaces.gateways()
# print gwlist
# for gw in gwlist:
# 	if gw == 'default':
# 		pass
# 	else:
# 		print gwlist[gw]


#=======================
# Notes
#=======================
#netifaces.gateways()
#gws = netifaces.gateways()
#gws['default'][netifaces.AF_INET]
#print addrs
#{18: [{'addr': '3c:15:c2:c5:77:de'}], 2: [{'broadcast': '192.168.1.255', 'netmask': '255.255.255.0', 'addr': '192.168.1.222'}], 30: [{'netmask': 'ffff:ffff:ffff:ffff::', 'addr': 'fe80::3e15:c2ff:fec5:77de%en0'}]}
#print addrs[netifaces.AF_INET]
#[{'broadcast': '192.168.1.255', 'netmask': '255.255.255.0', 'addr': '192.168.1.222'}]
# addrs[netifaces.AF_INET][0]
# addrs[netifaces.AF_INET][0]['addr']
# addrs[netifaces.AF_INET][0]['netmask']
# addrs[netifaces.AF_LINK][0]['addr']
